@model List<ShoeShopWebsite.Models.Cart>

@{
    ViewData["Title"] = "Giỏ hàng - ShoeShopWebsite";
}

<div class="container mt-5">
    <h2 class="mb-4">Giỏ hàng của bạn</h2>

    @if (Model == null || !Model.Any())
    {
        <div class="alert alert-info" role="alert">
            Giỏ hàng của bạn đang trống. <a href="@Url.Action("Index", "Home")" class="alert-link">Tiếp tục mua sắm</a>.
        </div>
    }
    else
    {
        <table class="table table-bordered table-striped">
            <thead>
                <tr>
                    <th>Hình ảnh</th>
                    <th>Tên sản phẩm</th>
                    <th>Kích thước</th>
                    <th>Màu sắc</th>
                    <th>Giá</th>
                    <th>Số lượng</th>
                    <th>Tổng</th>
                    <th>Thao tác</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr data-cart-id="@item.CartID">
                        <td>
                            <img src="@(item.Product.ProductImages?.FirstOrDefault()?.ImageURL ?? "/images/no-image.png")"
                                 alt="@item.Product.ProductName"
                                 style="width: 50px; height: 50px; object-fit: cover;" />
                        </td>
                        <td>@item.Product.ProductName</td>
                        <td>
                            <select class="form-select size-select" data-cart-id="@item.CartID">
                                @foreach (var size in item.Product.ProductSizes.Select(ps => ps.Size))
                                {
                                    @if (size.SizeID == item.SizeID)
                                    {
                                        <option value="@size.SizeID" selected>@size.SizeName</option>
                                    }
                                    else
                                    {
                                        <option value="@size.SizeID">@size.SizeName</option>
                                    }
                                }
                            </select>
                        </td>
                        <td>
                            @if (item.Product.ProductColors.Any())
                            {
                                <select class="form-select color-select" data-cart-id="@item.CartID">
                                    @if (item.ColorID == null)
                                    {
                                        <option value="" selected>Không chọn</option>
                                    }
                                    else
                                    {
                                        <option value="">Không chọn</option>
                                    }
                                    @foreach (var color in item.Product.ProductColors.Select(pc => pc.Color))
                                    {
                                        @if (color.ColorID == item.ColorID)
                                        {
                                            <option value="@color.ColorID" selected>@color.ColorName</option>
                                        }
                                        else
                                        {
                                            <option value="@color.ColorID">@color.ColorName</option>
                                        }
                                    }
                                </select>
                            }
                            else
                            {
                                <span>Không có màu</span>
                            }
                        </td>
                        <td>@item.Product.Price.ToString("N0") đ</td>
                        <td>
                            <input type="number" class="form-control quantity-input"
                                   value="@item.Quantity" min="1"
                                   data-cart-id="@item.CartID"
                                   style="width: 80px;" />
                        </td>
                        <td class="subtotal">@((item.Product.Price * item.Quantity).ToString("N0")) đ</td>
                        <td>
                            <button class="btn btn-danger btn-sm remove-from-cart" data-cart-id="@item.CartID">
                                <i class="bi bi-trash"></i> Xóa
                            </button>
                        </td>
                    </tr>
                }
            </tbody>
            <tfoot>
                <tr>
                    <td colspan="6" class="text-end"><strong>Tổng cộng:</strong></td>
                    <td id="grandTotal"><strong>@Model.Sum(item => item.Product.Price * item.Quantity).ToString("N0") đ</strong></td>
                    <td></td>
                </tr>
            </tfoot>
        </table>

        <div class="text-end">
            <a asp-controller="Home" asp-action="Index" class="btn btn-secondary">Tiếp tục mua sắm</a>
            <a asp-controller="Checkout" asp-action="Index" class="btn btn-primary">Thanh toán</a>
        </div>
    }
</div>

<!-- Toast Container -->
<div id="toastContainer" class="position-fixed bottom-0 end-0 p-3" style="z-index: 1050;"></div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-icons/1.8.1/font/bootstrap-icons.min.css">

    <script>
        $(document).ready(function () {
            // Hàm hiển thị toast
            function showToast(message, isSuccess) {
                var toastHtml = `
                    <div class="toast align-items-center text-white ${isSuccess ? 'bg-success' : 'bg-danger'} border-0" role="alert" aria-live="assertive" aria-atomic="true">
                        <div class="d-flex">
                            <div class="toast-body">${message}</div>
                            <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
                        </div>
                    </div>`;
                $('#toastContainer').append(toastHtml);
                var $toast = $('#toastContainer .toast').last();
                $toast.toast({ delay: 3000 });
                $toast.toast('show');
                $toast.on('hidden.bs.toast', function () {
                    $(this).remove();
                });
            }

            // Hàm cập nhật tổng tiền
            function updateGrandTotal() {
                var total = 0;
                $('tbody tr').each(function () {
                    var subtotal = parseFloat($(this).find('.subtotal').text().replace(/[^0-9]/g, ''));
                    total += subtotal;
                });
                $('#grandTotal strong').text(total.toLocaleString('vi-VN') + ' đ');
            }

            // Thay đổi số lượng
            $('.quantity-input').on('change', function () {
                var cartId = $(this).data('cart-id');
                var quantity = parseInt($(this).val());
                var $row = $(this).closest('tr');

                updateCart(cartId, null, null, quantity, $row);
            });

            // Thay đổi kích thước
            $('.size-select').on('change', function () {
                var cartId = $(this).data('cart-id');
                var sizeId = parseInt($(this).val());
                var $row = $(this).closest('tr');

                updateCart(cartId, sizeId, null, null, $row);
            });

            // Thay đổi màu sắc
            $('.color-select').on('change', function () {
                var cartId = $(this).data('cart-id');
                var colorId = $(this).val() ? parseInt($(this).val()) : null;
                var $row = $(this).closest('tr');

                updateCart(cartId, null, colorId, null, $row);
            });

            // Hàm gọi Ajax để cập nhật giỏ hàng
            function updateCart(cartId, sizeId, colorId, quantity, $row) {
                $.ajax({
                    url: '@Url.Action("UpdateCartItem", "Cart")',
                    type: 'POST',
                    data: { cartId: cartId, sizeId: sizeId, colorId: colorId, quantity: quantity },
                    headers: {
                        'X-CSRF-TOKEN': $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function (response) {
                        if (response.success) {
                            if (response.quantity && response.subtotal) {
                                $row.find('.quantity-input').val(response.quantity);
                                $row.find('.subtotal').text(response.subtotal.toLocaleString('vi-VN') + ' đ');
                            }
                            updateGrandTotal();
                            showToast(response.message, true);
                        } else {
                            showToast(response.message, false);
                        }
                    },
                    error: function () {
                        showToast('Đã có lỗi xảy ra. Vui lòng thử lại sau.', false);
                    }
                });
            }

            // Xóa sản phẩm
            $('.remove-from-cart').on('click', function () {
                var cartId = $(this).data('cart-id');
                var $row = $(this).closest('tr');

                if (!confirm('Bạn có chắc muốn xóa sản phẩm này khỏi giỏ hàng?')) {
                    return;
                }

                $row.find('.remove-from-cart').prop('disabled', true).html('<i class="bi bi-arrow-repeat fa-spin"></i> Đang xóa...');

                $.ajax({
                    url: '@Url.Action("RemoveFromCart", "Cart")',
                    type: 'POST',
                    data: { cartId: cartId },
                    headers: {
                        'X-CSRF-TOKEN': $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function (response) {
                        $row.find('.remove-from-cart').prop('disabled', false).html('<i class="bi bi-trash"></i> Xóa');
                        if (response.success) {
                            showToast(response.message, true);
                            $row.fadeOut(300, function () {
                                $(this).remove();
                                updateGrandTotal();
                                if ($('tbody tr').length === 0) {
                                    $('.container.mt-5').html(`
                                        <div class="alert alert-info" role="alert">
                                            Giỏ hàng của bạn đang trống. <a href="@Url.Action("Index", "Home")" class="alert-link">Tiếp tục mua sắm</a>.
                                        </div>
                                    `);
                                }
                            });
                        } else {
                            showToast(response.message, false);
                        }
                    },
                    error: function () {
                        $row.find('.remove-from-cart').prop('disabled', false).html('<i class="bi bi-trash"></i> Xóa');
                        showToast('Đã có lỗi xảy ra. Vui lòng thử lại sau.', false);
                    }
                });
            });
        });
    </script>
}