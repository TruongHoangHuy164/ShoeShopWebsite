@model AdminDashboardViewModel

@{
    ViewData["Title"] = "Admin Dashboard";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="dashboard-container">
    <div class="header">
        <h1>Admin Dashboard</h1>
        <p>Xin chào, @User.Identity.Name | Ngày: @DateTime.Now.ToString("dd/MM/yyyy HH:mm")</p>
    </div>

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <div class="dashboard-content">
        <div class="sidebar">
            <h2>Quản lý hệ thống</h2>
            <ul class="nav-list">
                <li><a href="/Admin/UserList" class="btn btn-sidebar"><i class="fas fa-users"></i> Quản lý người dùng</a></li>
                <li><a href="/Admin/ProductList" class="btn btn-sidebar"><i class="fas fa-box"></i> Quản lý sản phẩm</a></li>
                <li><a href="/Admin/CategoryList" class="btn btn-sidebar"><i class="fas fa-folder-open"></i> Quản lý danh mục</a></li>
                <li><a href="/Admin/ListDiscountCodes" class="btn btn-sidebar"><i class="fas fa-ticket-alt"></i> Quản lý mã giảm giá</a></li>
                <li><a href="/Admin/ReviewList" class="btn btn-sidebar"><i class="fas fa-star"></i> Quản lý đánh giá</a></li>
                <li><a href="/Admin/SizeList" class="btn btn-sidebar"><i class="fa-solid fa-up-right-and-down-left-from-center"></i> Quản lý kích thước</a></li>
                <li><a href="/Admin/ColorList" class="btn btn-sidebar"><i class="fa-solid fa-droplet"></i> Quản lý màu</a></li>
            </ul>
        </div>

        <div class="main-content">
            <div class="stats">
                <div class="stat-card pending">
                    <h3>Tổng người dùng</h3>
                    <p>@Model.TotalUsers</p>
                </div>
                <div class="stat-card delivering">
                    <h3>Tổng sản phẩm</h3>
                    <p>@Model.TotalProducts</p>
                </div>
                <div class="stat-card low-stock">
                    <h3>Tổng đơn hàng</h3>
                    <p>@Model.TotalOrders</p>
                </div>
                <div class="stat-card completed">
                    <h3>Doanh thu</h3>
                    <p>@Model.TotalRevenue.ToString("N0") VNĐ</p>
                </div>
                <div class="stat-card discount">
                    <h3>Tổng mã giảm giá</h3>
                    <p>@Model.DiscountCodeCount</p>
                </div>
            </div>

            <div class="section">
                <h2>Thống kê doanh thu theo tháng</h2>
                <canvas id="monthlyRevenueChart"></canvas>
            </div>

            <div class="section">
                <h2>Thống kê doanh thu theo quý</h2>
                <canvas id="quarterlyRevenueChart"></canvas>
            </div>

            <div class="section">
                <h2>Doanh thu theo danh mục</h2>
                <canvas id="categoryRevenueChart"></canvas>
            </div>

            <div class="section">
                <h2>Sản phẩm bán chạy nhất</h2>
                <table class="table table-bordered">
                    <thead>
                        <tr>
                            <th>Tên sản phẩm</th>
                            <th>Số lượng bán</th>
                            <th>Doanh thu (VNĐ)</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var product in Model.BestSellingProducts)
                        {
                            <tr>
                                <td>@product.ProductName</td>
                                <td>@product.TotalQuantitySold</td>
                                <td>@product.TotalRevenue.ToString("N0")</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

@section Styles {
    <!-- Tích hợp Font Awesome -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" integrity="sha512-iecdLmaskl7CVkqkXNQ/ZH/XLlvWZOJyj7Yy7tcenmpD1ypASozpmT/E0iPtmFIB46ZmdtAc9eNBvH0H/ZpiBw==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <style>
        .dashboard-container {
            max-width: 1200px;
            margin: 20px auto;
            padding: 20px;
            background-color: #FFFFFF;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
        }

        .header {
            background-color: #F9F9F9;
            padding: 10px 15px;
            border-radius: 6px;
            margin-bottom: 20px;
            display: flex;
            justify-content: space-between;
            align-items: center;
            flex-wrap: wrap;
        }

            .header h1 {
                font-size: 28px;
                color: #333333;
                margin-bottom: 5px;
            }

            .header p {
                font-size: 14px;
                color: #999999;
                margin: 0;
            }

        .dashboard-content {
            display: flex;
            gap: 20px;
        }

        .sidebar {
            width: 250px;
            background-color: #F5F5F5;
            padding: 20px;
            border-radius: 8px;
            border: 1px solid #E0E0E0;
        }

            .sidebar h2 {
                font-size: 18px;
                color: #333333;
                margin-bottom: 20px;
                padding-bottom: 5px;
                border-bottom: 2px solid #E0E0E0;
            }

        .nav-list {
            list-style: none;
            padding: 0;
            margin: 0;
        }

            .nav-list li {
                margin-bottom: 10px;
            }

        .btn-sidebar {
            display: flex;
            align-items: center;
            gap: 10px;
            background-color: #6c757d;
            color: #FFFFFF;
            padding: 10px;
            text-align: left;
            border-radius: 4px;
            text-decoration: none;
            font-size: 14px;
            transition: background-color 0.3s ease;
        }

            .btn-sidebar:hover {
                background-color: #5a6268;
            }

            .btn-sidebar i {
                font-size: 16px;
            }

        .main-content {
            flex: 1;
        }

        .stats {
            display: flex;
            gap: 20px;
            margin: 20px 0;
            flex-wrap: wrap;
        }

        .stat-card {
            flex: 1;
            padding: 20px;
            border-radius: 8px;
            text-align: center;
            border: 1px solid #E0E0E0;
            transition: box-shadow 0.3s ease, transform 0.2s ease;
            min-width: 150px;
        }

            .stat-card:hover {
                box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
                transform: translateY(-2px);
            }

            .stat-card h3 {
                font-size: 16px;
                color: #666666;
                margin: 0 0 10px 0;
            }

            .stat-card p {
                font-size: 24px;
                color: #333333;
                font-weight: bold;
                margin: 0;
            }

            .stat-card.pending {
                background-color: #FFF8F0;
                border-left: 4px solid #FFCC80;
            }

            .stat-card.delivering {
                background-color: #F6F0FA;
                border-left: 4px solid #CE93D8;
            }

            .stat-card.low-stock {
                background-color: #F5F9F5;
                border-left: 4px solid #A5D6A7;
            }

            .stat-card.completed {
                background-color: #E8F5E9;
                border-left: 4px solid #4CAF50;
            }

            .stat-card.discount {
                background-color: #E3F2FD;
                border-left: 4px solid #42A5F5;
            }

        .section {
            margin-bottom: 30px;
        }

            .section h2 {
                font-size: 20px;
                color: #333333;
                margin-bottom: 15px;
                padding-bottom: 5px;
                border-bottom: 2px solid #E0E0E0;
            }

        canvas#monthlyRevenueChart, canvas#categoryRevenueChart, canvas#quarterlyRevenueChart {
            max-height: 400px;
        }

        .table {
            width: 100%;
            border-collapse: collapse;
        }

            .table th, .table td {
                padding: 10px;
                text-align: left;
                border: 1px solid #E0E0E0;
            }

            .table th {
                background-color: #F5F5F5;
                font-weight: bold;
            }

            .table tbody tr:hover {
                background-color: #F9F9F9;
            }
    </style>
}

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        // Biểu đồ doanh thu theo tháng
        const ctxMonthly = document.getElementById('monthlyRevenueChart').getContext('2d');
        const monthlyRevenueChart = new Chart(ctxMonthly, {
            type: 'line',
            data: {
                labels: ['Tháng 1', 'Tháng 2', 'Tháng 3', 'Tháng 4', 'Tháng 5'],
                datasets: [{
                    label: 'Doanh thu (VNĐ)',
                    data: [@Html.Raw(string.Join(",", Model.MonthlyRevenue))],
                    backgroundColor: 'rgba(76, 175, 80, 0.2)',
                    borderColor: '#4CAF50',
                    borderWidth: 2,
                    fill: true,
                    tension: 0.4
                }]
            },
            options: {
                responsive: true,
                scales: {
                    y: {
                        beginAtZero: true,
                        title: {
                            display: true,
                            text: 'Doanh thu (VNĐ)'
                        }
                    },
                    x: {
                        title: {
                            display: true,
                            text: 'Tháng'
                        }
                    }
                },
                plugins: {
                    legend: {
                        display: true,
                        position: 'top'
                    }
                }
            }
        });

        // Biểu đồ doanh thu theo quý
        const ctxQuarterly = document.getElementById('quarterlyRevenueChart').getContext('2d');
        const quarterlyRevenueChart = new Chart(ctxQuarterly, {
            type: 'bar',
            data: {
                labels: ['Quý 1', 'Quý 2', 'Quý 3', 'Quý 4'],
                datasets: [{
                    label: 'Doanh thu (VNĐ)',
                    data: [@Html.Raw(string.Join(",", Model.QuarterlyRevenue))],
                    backgroundColor: ['#42A5F5', '#66BB6A', '#FFA726', '#EF5350'],
                    borderColor: ['#1E88E5', '#43A047', '#F57C00', '#D32F2F'],
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                scales: {
                    y: {
                        beginAtZero: true,
                        title: {
                            display: true,
                            text: 'Doanh thu (VNĐ)'
                        }
                    },
                    x: {
                        title: {
                            display: true,
                            text: 'Quý'
                        }
                    }
                },
                plugins: {
                    legend: {
                        display: true,
                        position: 'top'
                    }
                }
            }
        });

        // Biểu đồ doanh thu theo danh mục
        const ctxCategory = document.getElementById('categoryRevenueChart').getContext('2d');
        const categoryRevenueChart = new Chart(ctxCategory, {
            type: 'pie',
            data: {
                labels: [@Html.Raw(string.Join(",", Model.CategoryRevenueData.CategoryNames.Select(name => $"'{name}'")))],
                datasets: [{
                    label: 'Doanh thu (VNĐ)',
                    data: [@Html.Raw(string.Join(",", Model.CategoryRevenueData.Revenues))],
                    backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0', '#9966FF', '#FF9F40'],
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: {
                        display: true,
                        position: 'top'
                    }
                }
            }
        });
    </script>
}