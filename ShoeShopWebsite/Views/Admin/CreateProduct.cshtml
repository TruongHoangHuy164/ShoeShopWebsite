@model ShoeShopWebsite.Models.Product

@{
    ViewData["Title"] = "Thêm sản phẩm mới - Admin";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var sizes = ViewData["Sizes"] as List<ShoeShopWebsite.Models.Size>;
    var colors = ViewData["Colors"] as List<ShoeShopWebsite.Models.Color>;
}

<div class="container admin-product-form">
    <div class="header d-flex justify-content-between align-items-center mb-4">
        <h1>Thêm sản phẩm mới</h1>
        <a href="@Url.Action("ProductList", "Admin")" class="btn btn-back">
            <i class="fas fa-arrow-left me-1"></i> Quay lại
        </a>
    </div>

    @if (!ViewData.ModelState.IsValid)
    {
        <div class="alert alert-danger">
            <ul>
                @foreach (var key in ViewData.ModelState.Keys)
                {
                    foreach (var error in ViewData.ModelState[key].Errors)
                    {
                        <li>@error.ErrorMessage</li>
                    }
                }
            </ul>
        </div>
    }

    <form asp-action="CreateProduct" asp-controller="Admin" asp-area="Admin" method="post" enctype="multipart/form-data">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>

        <div class="row">
            <div class="col-md-8">
                <div class="card mb-4">
                    <div class="card-header">
                        <h5 class="mb-0">Thông tin cơ bản</h5>
                    </div>
                    <div class="card-body">
                        <div class="mb-3">
                            <label asp-for="ProductName" class="form-label">Tên sản phẩm</label>
                            <input asp-for="ProductName" id="ProductName" class="form-control" required />
                            <span asp-validation-for="ProductName" class="text-danger"></span>
                        </div>

                        <div class="mb-3">
                            <label asp-for="CategoryID" class="form-label">Danh mục</label>
                            <select asp-for="CategoryID" id="CategoryID" class="form-select" asp-items="ViewBag.CategoryID" required>
                                <option value="">-- Chọn danh mục --</option>
                            </select>
                            <span asp-validation-for="CategoryID" class="text-danger"></span>
                        </div>

                        <div class="mb-3">
                            <label asp-for="Price" class="form-label">Giá</label>
                            <input asp-for="Price" id="Price" class="form-control" type="number" min="0" step="0.01" required />
                            <span asp-validation-for="Price" class="text-danger"></span>
                        </div>

                        <div class="mb-3">
                            <label class="form-label">Màu sắc</label>
                            <div class="row">
                                @if (colors != null && colors.Any())
                                {
                                    foreach (var color in colors)
                                    {
                                        <div class="col-md-4">
                                            <div class="form-check">
                                                <input type="checkbox" id="color_@color.ColorID" name="selectedColors" value="@color.ColorID" class="form-check-input color-checkbox" />
                                                <label class="form-check-label" for="color_@color.ColorID">@color.ColorName</label>
                                            </div>
                                        </div>
                                    }
                                }
                                else
                                {
                                    <p class="text-muted">Không có màu sắc nào để chọn.</p>
                                }
                            </div>
                            <span class="text-danger" id="colorValidation">@Html.ValidationMessage("selectedColors")</span>
                        </div>

                        <div class="mb-3">
                            <label asp-for="Description" class="form-label">Mô tả</label>
                            <textarea asp-for="Description" class="form-control" rows="5"></textarea>
                            <span asp-validation-for="Description" class="text-danger"></span>
                        </div>
                    </div>
                </div>

                <div class="card mb-4">
                    <div class="card-header">
                        <h5 class="mb-0">Kích cỡ và số lượng</h5>
                    </div>
                    <div class="card-body">
                        <div class="table-responsive">
                            <table class="table table-bordered">
                                <thead>
                                    <tr>
                                        <th>Kích cỡ</th>
                                        <th>Số lượng</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @if (sizes != null)
                                    {
                                        for (int i = 0; i < sizes.Count; i++)
                                        {
                                            <tr>
                                                <td>
                                                    <div class="form-check">
                                                        <input type="checkbox" id="size_@sizes[i].SizeID" name="selectedSizes" value="@sizes[i].SizeID" class="form-check-input size-checkbox" />
                                                        <label class="form-check-label" for="size_@sizes[i].SizeID">@sizes[i].SizeName</label>
                                                    </div>
                                                </td>
                                                <td>
                                                    <input type="number" name="stockQuantities" class="form-control stock-input" min="0" value="0" />
                                                </td>
                                            </tr>
                                        }
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-md-4">
                <div class="card mb-4">
                    <div class="card-header">
                        <h5 class="mb-0">Hình ảnh sản phẩm</h5>
                    </div>
                    <div class="card-body">
                        <div class="mb-3">
                            <label for="imageFiles" class="form-label">Hình ảnh</label>
                            <input type="file" id="imageFiles" name="imageFiles" class="form-control" multiple accept="image/*" required />
                            <div class="form-text">Có thể chọn nhiều hình ảnh. Hình ảnh đầu tiên sẽ là hình ảnh chính.</div>
                        </div>
                        <div id="imagePreview" class="row mt-3"></div>
                    </div>
                </div>

                <div class="d-grid">
                    <button type="submit" class="btn btn-primary" id="submitBtn">
                        <i class="fas fa-save me-2"></i> Lưu sản phẩm
                    </button>
                </div>
            </div>
        </div>
    </form>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        // Image preview
        document.getElementById('imageFiles').addEventListener('change', function (e) {
            const imagePreview = document.getElementById('imagePreview');
            imagePreview.innerHTML = '';
            if (this.files) {
                for (let i = 0; i < this.files.length; i++) {
                    const file = this.files[i];
                    if (file.type.match('image.*')) {
                        const reader = new FileReader();
                        reader.onload = function (e) {
                            const div = document.createElement('div');
                            div.className = 'col-6 mb-2';
                            div.innerHTML = `
                                <div class="card">
                                    <img src="${e.target.result}" class="card-img-top" style="height: 150px; object-fit: cover;">
                                    ${i === 0 ? '<div class="card-footer p-1 text-center"><span class="badge bg-primary">Ảnh chính</span></div>' : ''}
                                </div>
                            `;
                            imagePreview.appendChild(div);
                        }
                        reader.readAsDataURL(file);
                    }
                }
            }
        });

        // Form validation
        document.getElementById('submitBtn').addEventListener('click', function (e) {
            const productName = document.getElementById('ProductName').value;
            const categoryID = document.getElementById('CategoryID').value;
            const price = document.getElementById('Price').value;
            const sizeCheckboxes = document.querySelectorAll('.size-checkbox:checked');
            const colorCheckboxes = document.querySelectorAll('.color-checkbox:checked');
            const imageFiles = document.getElementById('imageFiles').files;

            let isValid = true;
            let errorMessage = '';

            if (!productName) {
                errorMessage += 'Vui lòng nhập tên sản phẩm\n';
                isValid = false;
            }
            if (!categoryID) {
                errorMessage += 'Vui lòng chọn danh mục\n';
                isValid = false;
            }
            if (!price || parseFloat(price) <= 0) {
                errorMessage += 'Vui lòng nhập giá hợp lệ\n';
                isValid = false;
            }
            if (sizeCheckboxes.length === 0) {
                errorMessage += 'Vui lòng chọn ít nhất một kích cỡ\n';
                isValid = false;
            }
            if (colorCheckboxes.length === 0) {
                errorMessage += 'Vui lòng chọn ít nhất một màu sắc\n';
                isValid = false;
            }
            if (imageFiles.length === 0) {
                errorMessage += 'Vui lòng chọn ít nhất một hình ảnh\n';
                isValid = false;
            }

            sizeCheckboxes.forEach((checkbox) => {
                const row = checkbox.closest('tr');
                const stockInput = row.querySelector('.stock-input');
                const stockValue = parseInt(stockInput.value, 10);
                if (isNaN(stockValue) || stockValue < 0) {
                    errorMessage += `Vui lòng nhập số lượng hợp lệ cho kích cỡ ${checkbox.nextElementSibling.textContent.trim()}\n`;
                    isValid = false;
                }
            });

            if (!isValid) {
                e.preventDefault();
                alert(errorMessage);
            }
        });
    </script>
}

@section Styles {
    <style>
        .admin-product-form {
            max-width: 1300px;
            margin: 50px auto;
            padding: 0 20px;
            font-family: 'Roboto', 'Segoe UI', sans-serif;
        }

        .header h1 {
            font-size: 26px;
            color: #1a1a1a;
            font-weight: 500;
            padding-bottom: 8px;
            border-bottom: 1px solid #e0e0e0;
            margin: 0;
        }

        .card {
            border: none;
            border-radius: 12px;
            background-color: #fff;
            box-shadow: 0 2px 15px rgba(0, 0, 0, 0.05);
            overflow: hidden;
        }

        .card-header {
            background-color: #f5f6f8;
            padding: 14px 20px;
            border-bottom: 1px solid #e0e0e0;
        }

        .card-body {
            padding: 20px;
        }

        .form-label {
            font-weight: 500;
            color: #333;
        }

        .form-control, .form-select {
            border-radius: 6px;
            border: 1px solid #e0e0e0;
            padding: 8px 12px;
        }

        .form-check {
            margin-bottom: 8px;
        }

        .table {
            margin-bottom: 0;
            border-collapse: collapse;
            width: 100%;
        }

        .table th {
            background-color: #f5f6f8;
            color: #333;
            padding: 14px 20px;
            font-weight: 500;
            font-size: 13px;
            text-transform: uppercase;
            letter-spacing: 0.5px;
            border-bottom: 1px solid #e0e0e0;
        }

        .table td {
            padding: 14px 20px;
            vertical-align: middle;
            border-bottom: 1px solid #e8ecef;
            color: #4a4a4a;
            font-size: 14px;
        }

        .btn {
            padding: 10px 20px;
            border-radius: 6px;
            font-size: 16px;
            transition: all 0.3s ease;
            border: none;
            cursor: pointer;
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            justify-content: center;
        }

        .btn-primary {
            background-color: #3b82f6;
            color: #fff;
        }

        .btn-primary:hover {
            background-color: #2563eb;
        }

        .btn-back {
            background-color: #6b7280;
            color: #fff;
        }

        .btn-back:hover {
            background-color: #4b5563;
        }

        .alert {
            border-radius: 8px;
            font-size: 14px;
            padding: 12px 20px;
            margin-bottom: 20px;
        }
    </style>
}