@model ShoeShopWebsite.Models.Product;
@using ShoeShopWebsite.Models;
@{
    ViewData["Title"] = "Chi tiết sản phẩm - " + Model.ProductName;
    var reviews = ViewData["Reviews"] as List<ShoeShopWebsite.Models.ProductReview> ?? new List<ShoeShopWebsite.Models.ProductReview>();
    var averageRating = reviews.Any() ? Math.Round(reviews.Average(r => r.Rating), 1) : 0;
    int fullStars = (int)Math.Floor(averageRating);
    bool hasHalfStar = averageRating - fullStars >= 0.5;
}

<div class="container my-5 nike-style">
    <div class="row align-items-start">
        <!-- Ảnh sản phẩm -->
        <div class="col-lg-7">
            <div class="image-container">
                @if (Model.ProductImages != null && Model.ProductImages.Any())
                {
                    <div class="main-image position-relative">
                        <img src="@Model.ProductImages.FirstOrDefault(i => i.IsPrimary)?.ImageURL"
                             class="img-fluid w-100"
                             alt="@Model.ProductName"
                             id="mainImage"
                             style="max-height: 600px; object-fit: contain;">
                    </div>
                    <div class="thumbnail-gallery d-flex flex-wrap gap-2 mt-3">
                        @foreach (var image in Model.ProductImages)
                        {
                            <img src="@image.ImageURL"
                                 class="thumbnail"
                                 alt="@Model.ProductName"
                                 data-full="@image.ImageURL"
                            @(image.IsPrimary ? "data-primary='true'" : "")>
                        }
                    </div>
                }
                else
                {
                    <div class="text-center py-5 bg-light">
                        <i class="fas fa-image fa-3x text-muted"></i>
                        <p class="text-muted mt-2">Không có ảnh sản phẩm</p>
                    </div>
                }
            </div>
        </div>

        <!-- Thông tin sản phẩm -->
        <div class="col-lg-5 product-info">
            <h1 class="product-title">@Model.ProductName</h1>
            <p class="category-text text-muted">@Model.Category?.CategoryName</p>
            <h2 class="price-text">@Model.Price.ToString("C0")</h2>

            <div class="description my-4">
                <p>@(string.IsNullOrEmpty(Model.Description) ? "Không có mô tả" : Model.Description)</p>
            </div>

            <!-- Kích cỡ -->
            @if (Model.ProductSizes != null && Model.ProductSizes.Any())
            {
                <div class="size-section mb-4">
                    <label class="fw-bold mb-2">Kích cỡ:</label>
                    <div class="size-options d-flex flex-wrap gap-2">
                        @foreach (var size in Model.ProductSizes)
                        {
                            <button class="size-btn btn @(size.Stock > 0 ? "btn-outline-dark" : "btn-outline-secondary disabled")"
                                    data-size="@size.SizeID"
                                    data-stock="@size.Stock">
                                @size.Size?.SizeName
                            </button>
                        }
                    </div>
                </div>
            }

            <!-- Màu sắc -->
            @if (Model.ProductColors != null && Model.ProductColors.Any())
            {
                <div class="color-section mb-4">
                    <label class="fw-bold mb-2">Màu sắc:</label>
                    <select id="colorId" name="colorId" class="form-select" required>
                        <option value="">Chọn màu sắc</option>
                        @foreach (var color in Model.ProductColors)
                        {
                            <option value="@color.ColorID">@color.Color?.ColorName</option>
                        }
                    </select>
                </div>
            }

            <!-- Form thêm vào giỏ hàng -->
            <form id="addToCartForm" class="mt-4">
                <input type="hidden" name="productId" value="@Model.ProductID" />
                <input type="hidden" id="selectedSizeId" name="sizeId" />
                <div class="quantity-section mb-3 d-flex align-items-center gap-3">
                    <label class="fw-bold">Số lượng:</label>
                    <input type="number" name="quantity" class="form-control w-25" min="1" value="1" required />
                </div>
                <button type="submit" class="btn btn-dark btn-add-to-cart w-100">Thêm vào giỏ hàng</button>
            </form>

            <!-- Thông báo -->
            @if (TempData["SuccessMessage"] != null)
            {
                <div class="alert alert-success mt-3">@TempData["SuccessMessage"]</div>
            }
            @if (TempData["ErrorMessage"] != null)
            {
                <div class="alert alert-danger mt-3">@TempData["ErrorMessage"]</div>
            }

            <!-- Nút quay lại -->
            <a asp-action="Index" class="btn btn-link mt-3 text-muted">Quay lại danh sách sản phẩm</a>
        </div>
    </div>
</div>

<div class="reviews-section mt-5">
    <h3>Đánh giá sản phẩm (@reviews.Count() đánh giá)</h3>
    <div class="average-rating mb-3 d-inline-flex align-items-center gap-2 p-2 border rounded">
        <span class="fw-bold">Trung bình:</span>
        @for (int i = 1; i <= 5; i++)
        {
            if (i <= fullStars)
            {
                <i class="fas fa-star text-warning"></i>
            }
            else if (i == fullStars + 1 && hasHalfStar)
            {
                <i class="fas fa-star-half-alt text-warning"></i>
            }
            else
            {
                <i class="fas fa-star text-muted"></i>
            }
        }
        <span class="fw-bold">@averageRating</span>
    </div>
    <div id="reviewsContainer">
        @if (!reviews.Any())
        {
            <p class="text-muted">Chưa có đánh giá nào cho sản phẩm này.</p>
        }
        else
        {
            @foreach (var review in reviews)
            {
                <div class="review-item mb-3 p-3 border rounded" data-rating="@review.Rating">
                    <div class="d-flex justify-content-between">
                        <strong>@(review.User?.FullName ?? review.User?.UserName ?? "Ẩn danh")</strong>
                        <span>@review.ReviewDate.ToString("dd/MM/yyyy HH:mm")</span>
                    </div>
                    <div class="rating">
                        @for (int i = 1; i <= 5; i++)
                        {
                            <i class="fas fa-star @(i <= review.Rating ? "text-warning" : "text-muted")"></i>
                        }
                    </div>
                    <p class="mt-2">@(string.IsNullOrEmpty(review.Comment) ? "Không có bình luận" : review.Comment)</p>
                    <p class="text-muted">Kích cỡ: @(review.Size?.SizeName ?? "N/A")</p>
                    <p class="text-muted">Màu sắc: @(review.Color?.ColorName ?? "N/A")</p>
                </div>
            }
        }
    </div>
</div>

<style>
    .reviews-section {
        border-top: 1px solid #E0E0E0;
        padding-top: 20px;
    }

    .review-item {
        background-color: #F9F9F9;
        transition: all 0.3s ease;
    }

        .review-item:hover {
            background-color: #F5F5F5;
        }

    .rating .fa-star {
        font-size: 1.2rem;
        margin-right: 2px;
    }

    .nike-style {
        font-family: 'Helvetica Neue', Arial, sans-serif;
        max-width: 1200px;
    }

    .image-container {
        position: sticky;
        top: 20px;
    }

    .main-image img {
        transition: transform 0.3s ease;
    }

    .main-image:hover img {
        transform: scale(1.05);
    }

    .thumbnail {
        width: 80px;
        height: 80px;
        object-fit: cover;
        border: 2px solid transparent;
        cursor: pointer;
        transition: border-color 0.3s ease;
    }

        .thumbnail:hover, .thumbnail[data-primary="true"] {
            border-color: #000;
        }

    .product-info {
        padding-left: 30px;
    }

    .product-title {
        font-size: 2rem;
        font-weight: bold;
        color: #111;
        margin-bottom: 10px;
    }

    .category-text {
        font-size: 1rem;
        text-transform: uppercase;
    }

    .price-text {
        font-size: 1.75rem;
        font-weight: 600;
        color: #111;
    }

    .description {
        font-size: 1rem;
        color: #666;
        line-height: 1.6;
    }

    .size-btn {
        min-width: 50px;
        height: 50px;
        border-radius: 5px;
        font-size: 1rem;
        transition: all 0.3s ease;
    }

        .size-btn:hover:not(.disabled) {
            background-color: #000;
            color: #fff;
        }

        .size-btn.active {
            background-color: #000;
            color: #fff;
        }

    .form-select {
        font-size: 1rem;
        padding: 10px;
        border-radius: 5px;
    }

    .btn-add-to-cart {
        padding: 15px;
        font-size: 1.2rem;
        font-weight: 600;
        text-transform: uppercase;
        transition: background-color 0.3s ease;
    }

        .btn-add-to-cart:hover {
            background-color: #333;
        }

    /* Thiết kế cho sao trung bình */
    .average-rating {
        background-color: #f9f9f9;
        border: 1px solid #e0e0e0;
        border-radius: 10px;
        transition: all 0.3s ease;
    }

        .average-rating:hover {
            background-color: #f5f5f5;
            transform: scale(1.05);
        }

        .average-rating .fa-star,
        .average-rating .fa-star-half-alt {
            font-size: 1.2rem;
            margin-right: 3px;
        }

        .average-rating span {
            font-size: 1.1rem;
            color: #111;
        }
</style>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">

    <script>
        $(document).ready(function () {
            // Xử lý click thumbnail để đổi ảnh chính
            $('.thumbnail').on('click', function () {
                $('#mainImage').attr('src', $(this).data('full'));
                $('.thumbnail').removeAttr('data-primary');
                $(this).attr('data-primary', 'true');
            });

            // Chọn kích cỡ
            $('.size-btn').on('click', function () {
                if ($(this).hasClass('disabled')) return;
                $('.size-btn').removeClass('active');
                $(this).addClass('active');
                $('#selectedSizeId').val($(this).data('size'));
            });

            // Thêm vào giỏ hàng qua AJAX
            $('#addToCartForm').on('submit', function (e) {
                e.preventDefault();

                var productId = $(this).find('input[name="productId"]').val();
                var sizeId = $('#selectedSizeId').val();
                var colorId = $('#colorId').val() === "" ? null : $('#colorId').val();
                var quantity = $(this).find('input[name="quantity"]').val();

                if (!sizeId) {
                    showToast('Vui lòng chọn kích cỡ!', false);
                    return;
                }
                if (!colorId && '@Model.ProductColors?.Count' > 0) {
                    showToast('Vui lòng chọn màu sắc!', false);
                    return;
                }
                if (quantity <= 0) {
                    showToast('Số lượng phải lớn hơn 0!', false);
                    return;
                }

                console.log("Sending to AddToCart:", { productId, sizeId, colorId, quantity });

                $.ajax({
                    url: '@Url.Action("AddToCart", "Cart")',
                    type: 'POST',
                    data: {
                        productId: productId,
                        sizeId: sizeId,
                        colorId: colorId,
                        quantity: quantity,
                        __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function (response) {
                        console.log("Response from AddToCart:", response);
                        if (response.success) {
                            showToast(response.message, true);
                        } else {
                            showToast(response.message, false);
                        }
                    },
                    error: function (xhr, status, error) {
                        console.log("AJAX Error:", xhr.responseText);
                        showToast('Đã có lỗi xảy ra: ' + error, false);
                    }
                });
            });

            // Hàm hiển thị toast thông báo
            function showToast(message, isSuccess) {
                var toast = $('#notificationToast');
                if (toast.length === 0) {
                    $('body').append(`
                        <div id="notificationToast" class="toast" role="alert" style="position: fixed; top: 20px; right: 20px; z-index: 1050;">
                            <div class="toast-header">
                                <strong class="me-auto">Thông báo</strong>
                                <button type="button" class="btn-close" data-bs-dismiss="toast"></button>
                            </div>
                            <div class="toast-body"></div>
                        </div>
                    `);
                    toast = $('#notificationToast');
                }
                toast.find('.toast-body').text(message);
                toast.removeClass('bg-success bg-danger').addClass(isSuccess ? 'bg-success' : 'bg-danger');
                toast.toast({ delay: 3000 });
                toast.toast('show');
            }
        });
    </script>
}